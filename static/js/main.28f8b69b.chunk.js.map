{"version":3,"sources":["App.tsx","index.tsx"],"names":["someCards","id","order","name","App","useState","cardList","setCardList","currentCard","setCurrentCard","className","sort","c1","c2","map","card","draggable","onDragStart","event","dragStartHandler","onDragLeave","console","log","target","style","backgroundColor","dragLeaveHandler","onDragEnd","dragEndHandler","onDragOver","preventDefault","background","dragOverHandler","onDrop","c","dropHandler","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QASMA,EAAoB,CACxB,CAAEC,GAAI,IAAKC,MAAO,IAAKC,KAAM,WAC7B,CAAEF,GAAI,IAAKC,MAAO,IAAKC,KAAM,WAC7B,CAAEF,GAAI,IAAKC,MAAO,IAAKC,KAAM,WAC7B,CAAEF,GAAI,IAAKC,MAAO,IAAKC,KAAM,YAGlBC,EAAgB,WAC3B,MAAgCC,mBAASL,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,CAC7CJ,GAAI,GACJC,MAAO,GACPC,KAAM,KAHR,mBAAOK,EAAP,KAAoBC,EAApB,KAmEA,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2BACCJ,EAASK,MAPI,SAACC,EAAUC,GAC3B,OAAQD,EAAGV,MAAQW,EAAGX,MAAS,GAAK,KAMRY,KAAI,SAACC,GAAD,OAC5B,qBAEEL,UAAU,OACVM,UAAU,OACVC,YAAa,SAACC,GAAD,OAnEI,SAACA,EAAwCH,GAIhEN,EAAeM,GA+DeI,CAAiBD,EAAOH,IAChDK,YAAa,SAACF,GAAD,OA7DI,SAACA,GAExBG,QAAQC,IAAI,WAAYJ,GAGxBA,EAAMK,OAAOC,MAAMC,gBAAkB,MAwDPC,CAAiBR,IACzCS,UAAW,SAACT,GAAD,OAtDI,SAACA,GAEtBG,QAAQC,IAAIJ,GAoDgBU,CAAeV,IACrCW,WAAY,SAACX,GAAD,OA/CI,SAACA,GACvBA,EAAMY,iBAGNT,QAAQC,IAAIJ,GAGZA,EAAMK,OAAOC,MAAMO,WAAa,YAwCHC,CAAgBd,IACvCe,OAAQ,SAACf,GAAD,OAtCI,SAACA,EAAYH,GAC/BG,EAAMY,iBAGNT,QAAQC,IAAIP,EAAMG,GAElBX,EAAYD,EAASQ,KAAI,SAAAoB,GACvB,OAAIA,EAAEjC,KAAOc,EAAKd,GACT,2BAAKiC,GAAZ,IAAehC,MAAOM,EAAYN,QAGhCgC,EAAEjC,KAAOO,EAAYP,GAChB,2BAAKiC,GAAZ,IAAehC,MAAOa,EAAKb,QAGtBgC,MAIThB,EAAMK,OAAOC,MAAMO,WAAa,MAmBPI,CAAYjB,EAAOH,IARxC,SAUGA,EAAKZ,MATDY,EAAKd,OAYd,wBACES,UAAU,SACV0B,KAAK,SACLC,QAjFa,kBAAM9B,EAAYP,IA8EjC,uBCjGNsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28f8b69b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\ntype Card = {\n  id: string;\n  order: string;\n  name: string;\n};\n\nconst someCards: Card[] = [\n  { id: '1', order: '1', name: 'card #1' },\n  { id: '3', order: '3', name: 'card #3' },\n  { id: '4', order: '4', name: 'card #4' },\n  { id: '2', order: '2', name: 'card #2' },\n];\n\nexport const App: React.FC = () => {\n  const [cardList, setCardList] = useState(someCards);\n  const [currentCard, setCurrentCard] = useState({\n    id: '',\n    order: '',\n    name: '',\n  });\n\n  const basicOrder = () => setCardList(someCards);\n\n  const dragStartHandler = (event: React.DragEvent<HTMLDivElement>, card: Card) => {\n    // eslint-disable-next-line no-console\n    // console.log(event, card);\n\n    setCurrentCard(card);\n  };\n\n  const dragLeaveHandler = (event: any) => {\n    // eslint-disable-next-line no-console\n    console.log('see this', event);\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.backgroundColor = 'red';\n  };\n\n  const dragEndHandler = (event: any) => {\n    // eslint-disable-next-line no-console\n    console.log(event);\n\n    // eslint-disable-next-line no-param-reassign\n    // event.target.style.background = 'red';\n  };\n\n  const dragOverHandler = (event: any) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    console.log(event);\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.background = 'lightgrey';\n  };\n\n  const dropHandler = (event: any, card: Card) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    console.log(card, event);\n\n    setCardList(cardList.map(c => {\n      if (c.id === card.id) {\n        return { ...c, order: currentCard.order };\n      }\n\n      if (c.id === currentCard.id) {\n        return { ...c, order: card.order };\n      }\n\n      return c;\n    }));\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.background = 'red';\n  };\n\n  const sortCards = (c1: Card, c2: Card) => {\n    return (c1.order > c2.order) ? 1 : -1;\n  };\n\n  return (\n    <div className=\"starter\">\n      <h1 className=\"title\">drug and drop</h1>\n      {cardList.sort(sortCards).map((card: { id: string; order: string; name: string; }) => (\n        <div\n          key={card.id}\n          className=\"card\"\n          draggable=\"true\"\n          onDragStart={(event) => dragStartHandler(event, card)}\n          onDragLeave={(event) => dragLeaveHandler(event)}\n          onDragEnd={(event) => dragEndHandler(event)}\n          onDragOver={(event) => dragOverHandler(event)}\n          onDrop={(event) => dropHandler(event, card)}\n        >\n          {card.name}\n        </div>\n      ))}\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={basicOrder}\n      >\n        Basic\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}