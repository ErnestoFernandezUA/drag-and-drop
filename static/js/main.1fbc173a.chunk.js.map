{"version":3,"sources":["App.tsx","index.tsx"],"names":["someCards","id","order","name","color","App","useState","cardList","setCardList","currentCard","setCurrentCard","className","sort","c1","c2","map","card","draggable","onDragStart","event","console","log","dragStartHandler","onDragLeave","target","style","backgroundColor","dragLeaveHandler","onDragEnd","background","dragEndHandler","onDragOver","preventDefault","dragOverHandler","onDrop","c","dropHandler","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAUMA,EAAoB,CACxB,CACEC,GAAI,IACJC,MAAO,IACPC,KAAM,UACNC,MAAO,WAET,CACEH,GAAI,IACJC,MAAO,IACPC,KAAM,UACNC,MAAO,WAET,CACEH,GAAI,IACJC,MAAO,IACPC,KAAM,UACNC,MAAO,WAET,CACEH,GAAI,IACJC,MAAO,IACPC,KAAM,UACNC,MAAO,YAIEC,EAAgB,WAC3B,MAAgCC,mBAASN,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,CAC7CL,GAAI,GACJC,MAAO,GACPC,KAAM,GACNC,MAAO,KAJT,mBAAOK,EAAP,KAAoBC,EAApB,KAoEA,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2BACCJ,EAASK,MAPI,SAACC,EAAUC,GAC3B,OAAQD,EAAGX,MAAQY,EAAGZ,MAAS,GAAK,KAMRa,KAAI,SAACC,GAAD,OAC5B,sBAEEL,UAAU,OACVM,UAAU,OACVC,YAAa,SAACC,GAAD,OAnEI,SAACA,EAAwCH,GAEhEI,QAAQC,IAAI,mBAAoBF,EAAOH,GAEvCN,EAAeM,GA+DeM,CAAiBH,EAAOH,IAChDO,YAAa,SAACJ,GAAD,OA7DI,SAACA,EAAYH,GAEpCI,QAAQC,IAAI,mBAAoBF,EAAOH,GAGvCG,EAAMK,OAAOC,MAAMC,gBAAkBV,EAAKZ,MAwDZuB,CAAiBR,EAAOH,IAChDY,UAAW,SAACT,GAAD,OAtDI,SAACA,GAEtBC,QAAQC,IAAI,iBAAkBF,GAG9BA,EAAMK,OAAOC,MAAMI,WAAapB,EAAYL,MAiDhB0B,CAAeX,IACrCY,WAAY,SAACZ,GAAD,OA/CI,SAACA,GACvBA,EAAMa,iBAMNb,EAAMK,OAAOC,MAAMI,WAAa,YAwCHI,CAAgBd,IACvCe,OAAQ,SAACf,GAAD,OAtCI,SAACA,EAAYH,GAC/BG,EAAMa,iBAKNxB,EAAYD,EAASQ,KAAI,SAAAoB,GACvB,OAAIA,EAAElC,KAAOe,EAAKf,GACT,2BAAKkC,GAAZ,IAAejC,MAAOO,EAAYP,QAGhCiC,EAAElC,KAAOQ,EAAYR,GAChB,2BAAKkC,GAAZ,IAAejC,MAAOc,EAAKd,QAGtBiC,MAIThB,EAAMK,OAAOC,MAAMI,WAAapB,EAAYL,MAmBnBgC,CAAYjB,EAAOH,IACtCS,MAAO,CACLC,gBAAiBV,EAAKZ,OAV1B,UAaGY,EAAKb,KACN,uBACCa,EAAKZ,QAdDY,EAAKf,OAiBd,wBACEU,UAAU,SACV0B,KAAK,SACLC,QAtFa,kBAAM9B,EAAYR,IAmFjC,uBC5HNuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fbc173a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\ntype Card = {\n  id: string;\n  order: string;\n  name: string;\n  color: string;\n};\n\nconst someCards: Card[] = [\n  {\n    id: '1',\n    order: '1',\n    name: 'card #1',\n    color: '#e71f00',\n  },\n  {\n    id: '3',\n    order: '3',\n    name: 'card #3',\n    color: '#aeb937',\n  },\n  {\n    id: '4',\n    order: '4',\n    name: 'card #4',\n    color: '#94c4d4',\n  },\n  {\n    id: '2',\n    order: '2',\n    name: 'card #2',\n    color: '#6e937d',\n  },\n];\n\nexport const App: React.FC = () => {\n  const [cardList, setCardList] = useState(someCards);\n  const [currentCard, setCurrentCard] = useState({\n    id: '',\n    order: '',\n    name: '',\n    color: '',\n  });\n\n  const basicOrder = () => setCardList(someCards);\n\n  const dragStartHandler = (event: React.DragEvent<HTMLDivElement>, card: Card) => {\n    // eslint-disable-next-line no-console\n    console.log('dragStartHandler', event, card);\n\n    setCurrentCard(card);\n  };\n\n  const dragLeaveHandler = (event: any, card: Card) => {\n    // eslint-disable-next-line no-console\n    console.log('dragLeaveHandler', event, card);\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.backgroundColor = card.color;\n  };\n\n  const dragEndHandler = (event: any) => {\n    // eslint-disable-next-line no-console\n    console.log('dragEndHandler', event);\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.background = currentCard.color;\n  };\n\n  const dragOverHandler = (event: any) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    // console.log('dragOverHandler', event.target.style.background);\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.background = 'lightgrey';\n  };\n\n  const dropHandler = (event: any, card: Card) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    // console.log(card, event);\n\n    setCardList(cardList.map(c => {\n      if (c.id === card.id) {\n        return { ...c, order: currentCard.order };\n      }\n\n      if (c.id === currentCard.id) {\n        return { ...c, order: card.order };\n      }\n\n      return c;\n    }));\n\n    // eslint-disable-next-line no-param-reassign\n    event.target.style.background = currentCard.color;\n  };\n\n  const sortCards = (c1: Card, c2: Card) => {\n    return (c1.order > c2.order) ? 1 : -1;\n  };\n\n  return (\n    <div className=\"starter\">\n      <h1 className=\"title\">drug and drop</h1>\n      {cardList.sort(sortCards).map((card: Card) => (\n        <div\n          key={card.id}\n          className=\"card\"\n          draggable=\"true\"\n          onDragStart={(event) => dragStartHandler(event, card)}\n          onDragLeave={(event) => dragLeaveHandler(event, card)}\n          onDragEnd={(event) => dragEndHandler(event)}\n          onDragOver={(event) => dragOverHandler(event)}\n          onDrop={(event) => dropHandler(event, card)}\n          style={{\n            backgroundColor: card.color,\n          }}\n        >\n          {card.name}\n          <br />\n          {card.color}\n        </div>\n      ))}\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={basicOrder}\n      >\n        Basic\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}